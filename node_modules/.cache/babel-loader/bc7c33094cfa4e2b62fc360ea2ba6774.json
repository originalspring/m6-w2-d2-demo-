{"ast":null,"code":"/**\n *\n * @namespace faker.date\n */\nvar _Date = function (faker) {\n  var self = this;\n  /**\n   * past\n   *\n   * @method faker.date.past\n   * @param {number} years\n   * @param {date} refDate\n   */\n\n  self.past = function (years, refDate) {\n    var date = refDate ? new Date(Date.parse(refDate)) : new Date();\n    var range = {\n      min: 1000,\n      max: (years || 1) * 365 * 24 * 3600 * 1000\n    };\n    var past = date.getTime();\n    past -= faker.random.number(range); // some time from now to N years ago, in milliseconds\n\n    date.setTime(past);\n    return date;\n  };\n  /**\n   * future\n   *\n   * @method faker.date.future\n   * @param {number} years\n   * @param {date} refDate\n   */\n\n\n  self.future = function (years, refDate) {\n    var date = refDate ? new Date(Date.parse(refDate)) : new Date();\n    var range = {\n      min: 1000,\n      max: (years || 1) * 365 * 24 * 3600 * 1000\n    };\n    var future = date.getTime();\n    future += faker.random.number(range); // some time from now to N years later, in milliseconds\n\n    date.setTime(future);\n    return date;\n  };\n  /**\n   * between\n   *\n   * @method faker.date.between\n   * @param {date} from\n   * @param {date} to\n   */\n\n\n  self.between = function (from, to) {\n    var fromMilli = Date.parse(from);\n    var dateOffset = faker.random.number(Date.parse(to) - fromMilli);\n    var newDate = new Date(fromMilli + dateOffset);\n    return newDate;\n  };\n  /**\n   * recent\n   *\n   * @method faker.date.recent\n   * @param {number} days\n   */\n\n\n  self.recent = function (days) {\n    var date = new Date();\n    var range = {\n      min: 1000,\n      max: (days || 1) * 24 * 3600 * 1000\n    };\n    var future = date.getTime();\n    future -= faker.random.number(range); // some time from now to N days ago, in milliseconds\n\n    date.setTime(future);\n    return date;\n  };\n  /**\n   * month\n   *\n   * @method faker.date.month\n   * @param {object} options\n   */\n\n\n  self.month = function (options) {\n    options = options || {};\n    var type = 'wide';\n\n    if (options.abbr) {\n      type = 'abbr';\n    }\n\n    if (options.context && typeof faker.definitions.date.month[type + '_context'] !== 'undefined') {\n      type += '_context';\n    }\n\n    var source = faker.definitions.date.month[type];\n    return faker.random.arrayElement(source);\n  };\n  /**\n   * weekday\n   *\n   * @param {object} options\n   * @method faker.date.weekday\n   */\n\n\n  self.weekday = function (options) {\n    options = options || {};\n    var type = 'wide';\n\n    if (options.abbr) {\n      type = 'abbr';\n    }\n\n    if (options.context && typeof faker.definitions.date.weekday[type + '_context'] !== 'undefined') {\n      type += '_context';\n    }\n\n    var source = faker.definitions.date.weekday[type];\n    return faker.random.arrayElement(source);\n  };\n\n  return self;\n};\n\nmodule['exports'] = _Date;","map":{"version":3,"names":["_Date","faker","self","past","years","refDate","date","Date","parse","range","min","max","getTime","random","number","setTime","future","between","from","to","fromMilli","dateOffset","newDate","recent","days","month","options","type","abbr","context","definitions","source","arrayElement","weekday","module"],"sources":["/Users/meishenyin/Desktop/Westcliff/m6-w2-d2-demo-/node_modules/faker/lib/date.js"],"sourcesContent":["/**\n *\n * @namespace faker.date\n */\nvar _Date = function (faker) {\n  var self = this;\n  /**\n   * past\n   *\n   * @method faker.date.past\n   * @param {number} years\n   * @param {date} refDate\n   */\n  self.past = function (years, refDate) {\n      var date = (refDate) ? new Date(Date.parse(refDate)) : new Date();\n      var range = {\n        min: 1000,\n        max: (years || 1) * 365 * 24 * 3600 * 1000\n      };\n\n      var past = date.getTime();\n      past -= faker.random.number(range); // some time from now to N years ago, in milliseconds\n      date.setTime(past);\n\n      return date;\n  };\n\n  /**\n   * future\n   *\n   * @method faker.date.future\n   * @param {number} years\n   * @param {date} refDate\n   */\n  self.future = function (years, refDate) {\n      var date = (refDate) ? new Date(Date.parse(refDate)) : new Date();\n      var range = {\n        min: 1000,\n        max: (years || 1) * 365 * 24 * 3600 * 1000\n      };\n\n      var future = date.getTime();\n      future += faker.random.number(range); // some time from now to N years later, in milliseconds\n      date.setTime(future);\n\n      return date;\n  };\n\n  /**\n   * between\n   *\n   * @method faker.date.between\n   * @param {date} from\n   * @param {date} to\n   */\n  self.between = function (from, to) {\n      var fromMilli = Date.parse(from);\n      var dateOffset = faker.random.number(Date.parse(to) - fromMilli);\n\n      var newDate = new Date(fromMilli + dateOffset);\n\n      return newDate;\n  };\n\n  /**\n   * recent\n   *\n   * @method faker.date.recent\n   * @param {number} days\n   */\n  self.recent = function (days) {\n      var date = new Date();\n      var range = {\n        min: 1000,\n        max: (days || 1) * 24 * 3600 * 1000\n      };\n\n      var future = date.getTime();\n      future -= faker.random.number(range); // some time from now to N days ago, in milliseconds\n      date.setTime(future);\n\n      return date;\n  };\n\n  /**\n   * month\n   *\n   * @method faker.date.month\n   * @param {object} options\n   */\n  self.month = function (options) {\n      options = options || {};\n\n      var type = 'wide';\n      if (options.abbr) {\n          type = 'abbr';\n      }\n      if (options.context && typeof faker.definitions.date.month[type + '_context'] !== 'undefined') {\n          type += '_context';\n      }\n\n      var source = faker.definitions.date.month[type];\n\n      return faker.random.arrayElement(source);\n  };\n\n  /**\n   * weekday\n   *\n   * @param {object} options\n   * @method faker.date.weekday\n   */\n  self.weekday = function (options) {\n      options = options || {};\n\n      var type = 'wide';\n      if (options.abbr) {\n          type = 'abbr';\n      }\n      if (options.context && typeof faker.definitions.date.weekday[type + '_context'] !== 'undefined') {\n          type += '_context';\n      }\n\n      var source = faker.definitions.date.weekday[type];\n\n      return faker.random.arrayElement(source);\n  };\n  \n  return self;\n  \n};\n\nmodule['exports'] = _Date;"],"mappings":"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"},"metadata":{},"sourceType":"script"}