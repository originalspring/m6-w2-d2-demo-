{"ast":null,"code":"/**\n * @namespace faker.finance\n */\nvar Finance = function (faker) {\n  var ibanLib = require(\"./iban\");\n\n  var Helpers = faker.helpers,\n      self = this;\n  /**\n   * account\n   *\n   * @method faker.finance.account\n   * @param {number} length\n   */\n\n  self.account = function (length) {\n    length = length || 8;\n    var template = '';\n\n    for (var i = 0; i < length; i++) {\n      template = template + '#';\n    }\n\n    length = null;\n    return Helpers.replaceSymbolWithNumber(template);\n  };\n  /**\n   * accountName\n   *\n   * @method faker.finance.accountName\n   */\n\n\n  self.accountName = function () {\n    return [Helpers.randomize(faker.definitions.finance.account_type), 'Account'].join(' ');\n  };\n  /**\n   * mask\n   *\n   * @method faker.finance.mask\n   * @param {number} length\n   * @param {boolean} parens\n   * @param {boolean} ellipsis\n   */\n\n\n  self.mask = function (length, parens, ellipsis) {\n    //set defaults\n    length = length == 0 || !length || typeof length == 'undefined' ? 4 : length;\n    parens = parens === null ? true : parens;\n    ellipsis = ellipsis === null ? true : ellipsis; //create a template for length\n\n    var template = '';\n\n    for (var i = 0; i < length; i++) {\n      template = template + '#';\n    } //prefix with ellipsis\n\n\n    template = ellipsis ? ['...', template].join('') : template;\n    template = parens ? ['(', template, ')'].join('') : template; //generate random numbers\n\n    template = Helpers.replaceSymbolWithNumber(template);\n    return template;\n  }; //min and max take in minimum and maximum amounts, dec is the decimal place you want rounded to, symbol is $, €, £, etc\n  //NOTE: this returns a string representation of the value, if you want a number use parseFloat and no symbol\n\n  /**\n   * amount\n   *\n   * @method faker.finance.amount\n   * @param {number} min\n   * @param {number} max\n   * @param {number} dec\n   * @param {string} symbol\n   *\n   * @return {string}\n   */\n\n\n  self.amount = function (min, max, dec, symbol) {\n    min = min || 0;\n    max = max || 1000;\n    dec = dec === undefined ? 2 : dec;\n    symbol = symbol || '';\n    var randValue = faker.random.number({\n      max: max,\n      min: min,\n      precision: Math.pow(10, -dec)\n    });\n    return symbol + randValue.toFixed(dec);\n  };\n  /**\n   * transactionType\n   *\n   * @method faker.finance.transactionType\n   */\n\n\n  self.transactionType = function () {\n    return Helpers.randomize(faker.definitions.finance.transaction_type);\n  };\n  /**\n   * currencyCode\n   *\n   * @method faker.finance.currencyCode\n   */\n\n\n  self.currencyCode = function () {\n    return faker.random.objectElement(faker.definitions.finance.currency)['code'];\n  };\n  /**\n   * currencyName\n   *\n   * @method faker.finance.currencyName\n   */\n\n\n  self.currencyName = function () {\n    return faker.random.objectElement(faker.definitions.finance.currency, 'key');\n  };\n  /**\n   * currencySymbol\n   *\n   * @method faker.finance.currencySymbol\n   */\n\n\n  self.currencySymbol = function () {\n    var symbol;\n\n    while (!symbol) {\n      symbol = faker.random.objectElement(faker.definitions.finance.currency)['symbol'];\n    }\n\n    return symbol;\n  };\n  /**\n   * bitcoinAddress\n   *\n   * @method  faker.finance.bitcoinAddress\n   */\n\n\n  self.bitcoinAddress = function () {\n    var addressLength = faker.random.number({\n      min: 27,\n      max: 34\n    });\n    var address = faker.random.arrayElement(['1', '3']);\n\n    for (var i = 0; i < addressLength - 1; i++) address += faker.random.alphaNumeric().toUpperCase();\n\n    return address;\n  };\n  /**\n   * iban\n   *\n   * @method  faker.finance.iban\n   */\n\n\n  self.iban = function (formatted) {\n    var ibanFormat = faker.random.arrayElement(ibanLib.formats);\n    var s = \"\";\n    var count = 0;\n\n    for (var b = 0; b < ibanFormat.bban.length; b++) {\n      var bban = ibanFormat.bban[b];\n      var c = bban.count;\n      count += bban.count;\n\n      while (c > 0) {\n        if (bban.type == \"a\") {\n          s += faker.random.arrayElement(ibanLib.alpha);\n        } else if (bban.type == \"c\") {\n          if (faker.random.number(100) < 80) {\n            s += faker.random.number(9);\n          } else {\n            s += faker.random.arrayElement(ibanLib.alpha);\n          }\n        } else {\n          if (c >= 3 && faker.random.number(100) < 30) {\n            if (faker.random.boolean()) {\n              s += faker.random.arrayElement(ibanLib.pattern100);\n              c -= 2;\n            } else {\n              s += faker.random.arrayElement(ibanLib.pattern10);\n              c--;\n            }\n          } else {\n            s += faker.random.number(9);\n          }\n        }\n\n        c--;\n      }\n\n      s = s.substring(0, count);\n    }\n\n    var checksum = 98 - ibanLib.mod97(ibanLib.toDigitString(s + ibanFormat.country + \"00\"));\n\n    if (checksum < 10) {\n      checksum = \"0\" + checksum;\n    }\n\n    var iban = ibanFormat.country + checksum + s;\n    return formatted ? iban.match(/.{1,4}/g).join(\" \") : iban;\n  };\n  /**\n   * bic\n   *\n   * @method  faker.finance.bic\n   */\n\n\n  self.bic = function () {\n    var vowels = [\"A\", \"E\", \"I\", \"O\", \"U\"];\n    var prob = faker.random.number(100);\n    return Helpers.replaceSymbols(\"???\") + faker.random.arrayElement(vowels) + faker.random.arrayElement(ibanLib.iso3166) + Helpers.replaceSymbols(\"?\") + \"1\" + (prob < 10 ? Helpers.replaceSymbols(\"?\" + faker.random.arrayElement(vowels) + \"?\") : prob < 40 ? Helpers.replaceSymbols(\"###\") : \"\");\n  };\n};\n\nmodule['exports'] = Finance;","map":{"version":3,"names":["Finance","faker","ibanLib","require","Helpers","helpers","self","account","length","template","i","replaceSymbolWithNumber","accountName","randomize","definitions","finance","account_type","join","mask","parens","ellipsis","amount","min","max","dec","symbol","undefined","randValue","random","number","precision","Math","pow","toFixed","transactionType","transaction_type","currencyCode","objectElement","currency","currencyName","currencySymbol","bitcoinAddress","addressLength","address","arrayElement","alphaNumeric","toUpperCase","iban","formatted","ibanFormat","formats","s","count","b","bban","c","type","alpha","boolean","pattern100","pattern10","substring","checksum","mod97","toDigitString","country","match","bic","vowels","prob","replaceSymbols","iso3166","module"],"sources":["/Users/meishenyin/Desktop/Westcliff/m6-w2-d2-demo-/node_modules/faker/lib/finance.js"],"sourcesContent":["/**\n * @namespace faker.finance\n */\nvar Finance = function (faker) {\n  var ibanLib = require(\"./iban\");\n  var Helpers = faker.helpers,\n      self = this;\n\n  /**\n   * account\n   *\n   * @method faker.finance.account\n   * @param {number} length\n   */\n  self.account = function (length) {\n\n      length = length || 8;\n\n      var template = '';\n\n      for (var i = 0; i < length; i++) {\n          template = template + '#';\n      }\n      length = null;\n      return Helpers.replaceSymbolWithNumber(template);\n  };\n\n  /**\n   * accountName\n   *\n   * @method faker.finance.accountName\n   */\n  self.accountName = function () {\n\n      return [Helpers.randomize(faker.definitions.finance.account_type), 'Account'].join(' ');\n  };\n\n  /**\n   * mask\n   *\n   * @method faker.finance.mask\n   * @param {number} length\n   * @param {boolean} parens\n   * @param {boolean} ellipsis\n   */\n  self.mask = function (length, parens, ellipsis) {\n\n      //set defaults\n      length = (length == 0 || !length || typeof length == 'undefined') ? 4 : length;\n      parens = (parens === null) ? true : parens;\n      ellipsis = (ellipsis === null) ? true : ellipsis;\n\n      //create a template for length\n      var template = '';\n\n      for (var i = 0; i < length; i++) {\n          template = template + '#';\n      }\n\n      //prefix with ellipsis\n      template = (ellipsis) ? ['...', template].join('') : template;\n\n      template = (parens) ? ['(', template, ')'].join('') : template;\n\n      //generate random numbers\n      template = Helpers.replaceSymbolWithNumber(template);\n\n      return template;\n  };\n\n  //min and max take in minimum and maximum amounts, dec is the decimal place you want rounded to, symbol is $, €, £, etc\n  //NOTE: this returns a string representation of the value, if you want a number use parseFloat and no symbol\n\n  /**\n   * amount\n   *\n   * @method faker.finance.amount\n   * @param {number} min\n   * @param {number} max\n   * @param {number} dec\n   * @param {string} symbol\n   *\n   * @return {string}\n   */\n  self.amount = function (min, max, dec, symbol) {\n\n      min = min || 0;\n      max = max || 1000;\n      dec = dec === undefined ? 2 : dec;\n      symbol = symbol || '';\n      var randValue = faker.random.number({ max: max, min: min, precision: Math.pow(10, -dec) });\n\n      return symbol + randValue.toFixed(dec);\n  };\n\n  /**\n   * transactionType\n   *\n   * @method faker.finance.transactionType\n   */\n  self.transactionType = function () {\n      return Helpers.randomize(faker.definitions.finance.transaction_type);\n  };\n\n  /**\n   * currencyCode\n   *\n   * @method faker.finance.currencyCode\n   */\n  self.currencyCode = function () {\n      return faker.random.objectElement(faker.definitions.finance.currency)['code'];\n  };\n\n  /**\n   * currencyName\n   *\n   * @method faker.finance.currencyName\n   */\n  self.currencyName = function () {\n      return faker.random.objectElement(faker.definitions.finance.currency, 'key');\n  };\n\n  /**\n   * currencySymbol\n   *\n   * @method faker.finance.currencySymbol\n   */\n  self.currencySymbol = function () {\n      var symbol;\n\n      while (!symbol) {\n          symbol = faker.random.objectElement(faker.definitions.finance.currency)['symbol'];\n      }\n      return symbol;\n  };\n\n  /**\n   * bitcoinAddress\n   *\n   * @method  faker.finance.bitcoinAddress\n   */\n  self.bitcoinAddress = function () {\n    var addressLength = faker.random.number({ min: 27, max: 34 });\n\n    var address = faker.random.arrayElement(['1', '3']);\n\n    for (var i = 0; i < addressLength - 1; i++)\n      address += faker.random.alphaNumeric().toUpperCase();\n\n    return address;\n  };\n\n  /**\n   * iban\n   *\n   * @method  faker.finance.iban\n   */\n  self.iban = function (formatted) {\n      var ibanFormat = faker.random.arrayElement(ibanLib.formats);\n      var s = \"\";\n      var count = 0;\n      for (var b = 0; b < ibanFormat.bban.length; b++) {\n          var bban = ibanFormat.bban[b];\n          var c = bban.count;\n          count += bban.count;\n          while (c > 0) {\n              if (bban.type == \"a\") {\n                  s += faker.random.arrayElement(ibanLib.alpha);\n              } else if (bban.type == \"c\") {\n                  if (faker.random.number(100) < 80) {\n                      s += faker.random.number(9);\n                  } else {\n                      s += faker.random.arrayElement(ibanLib.alpha);\n                  }\n              } else {\n                  if (c >= 3 && faker.random.number(100) < 30) {\n                      if (faker.random.boolean()) {\n                          s += faker.random.arrayElement(ibanLib.pattern100);\n                          c -= 2;\n                      } else {\n                          s += faker.random.arrayElement(ibanLib.pattern10);\n                          c--;\n                      }\n                  } else {\n                      s += faker.random.number(9);\n                  }\n              }\n              c--;\n          }\n          s = s.substring(0, count);\n      }\n      var checksum = 98 - ibanLib.mod97(ibanLib.toDigitString(s + ibanFormat.country + \"00\"));\n      if (checksum < 10) {\n          checksum = \"0\" + checksum;\n      }\n      var iban = ibanFormat.country + checksum + s;\n      return formatted ? iban.match(/.{1,4}/g).join(\" \") : iban;\n  };\n\n  /**\n   * bic\n   *\n   * @method  faker.finance.bic\n   */\n  self.bic = function () {\n      var vowels = [\"A\", \"E\", \"I\", \"O\", \"U\"];\n      var prob = faker.random.number(100);\n      return Helpers.replaceSymbols(\"???\") +\n          faker.random.arrayElement(vowels) +\n          faker.random.arrayElement(ibanLib.iso3166) +\n          Helpers.replaceSymbols(\"?\") + \"1\" +\n          (prob < 10 ?\n              Helpers.replaceSymbols(\"?\" + faker.random.arrayElement(vowels) + \"?\") :\n          prob < 40 ?\n              Helpers.replaceSymbols(\"###\") : \"\");\n  };\n};\n\nmodule['exports'] = Finance;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}