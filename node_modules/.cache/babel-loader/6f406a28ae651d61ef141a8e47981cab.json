{"ast":null,"code":"var _jsxFileName = \"/Users/meishenyin/Desktop/Westcliff/m6-w2-d2-demo-/src/features/todos/TodoListItem.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ReactComponent as TimesSolid } from './times-solid.svg';\nimport { availableColors, capitalize } from '../filters/colors';\nimport { todoColorSelected, todoDeleted, todoToggled, selectTodoById } from './todosSlice'; // Destructure `props.id`, since we just need the ID value\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoListItem = _ref => {\n  _s();\n\n  let {\n    id\n  } = _ref;\n  // Call our `selectTodoById` with the state _and_ the ID value\n  const todo = useSelector(state => selectTodoById(state, id));\n  const {\n    text,\n    completed,\n    color\n  } = todo;\n  const dispatch = useDispatch();\n\n  const handleCompletedChanged = () => {\n    dispatch(todoToggled(todo.id));\n  };\n\n  const handleColorChanged = e => {\n    const color = e.target.value;\n    dispatch(todoColorSelected(todo.id, color));\n  };\n\n  const onDelete = () => {\n    dispatch(todoDeleted(todo.id));\n  };\n\n  const colorOptions = availableColors.map(c => /*#__PURE__*/_jsxDEV(\"option\", {\n    value: c,\n    children: capitalize(c)\n  }, c, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"view\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"segment label\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"toggle\",\n          type: \"checkbox\",\n          checked: completed,\n          onChange: handleCompletedChanged\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-text\",\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"segment buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"colorPicker\",\n          value: color,\n          style: {\n            color\n          },\n          onChange: handleColorChanged,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), colorOptions]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"destroy\",\n          onClick: onDelete,\n          children: /*#__PURE__*/_jsxDEV(TimesSolid, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TodoListItem, \"sYuTICH3ezxhLVQORlD7K4+KScQ=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = TodoListItem;\nexport default TodoListItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoListItem\");","map":{"version":3,"names":["React","useSelector","useDispatch","ReactComponent","TimesSolid","availableColors","capitalize","todoColorSelected","todoDeleted","todoToggled","selectTodoById","TodoListItem","id","todo","state","text","completed","color","dispatch","handleCompletedChanged","handleColorChanged","e","target","value","onDelete","colorOptions","map","c"],"sources":["/Users/meishenyin/Desktop/Westcliff/m6-w2-d2-demo-/src/features/todos/TodoListItem.js"],"sourcesContent":["import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { ReactComponent as TimesSolid } from './times-solid.svg'\n\nimport { availableColors, capitalize } from '../filters/colors'\nimport {\n  todoColorSelected,\n  todoDeleted,\n  todoToggled,\n  selectTodoById,\n} from './todosSlice'\n\n// Destructure `props.id`, since we just need the ID value\nconst TodoListItem = ({ id }) => {\n  // Call our `selectTodoById` with the state _and_ the ID value\n  const todo = useSelector((state) => selectTodoById(state, id))\n  const { text, completed, color } = todo\n\n  const dispatch = useDispatch()\n\n  const handleCompletedChanged = () => {\n    dispatch(todoToggled(todo.id))\n  }\n\n  const handleColorChanged = (e) => {\n    const color = e.target.value\n    dispatch(todoColorSelected(todo.id, color))\n  }\n\n  const onDelete = () => {\n    dispatch(todoDeleted(todo.id))\n  }\n\n  const colorOptions = availableColors.map((c) => (\n    <option key={c} value={c}>\n      {capitalize(c)}\n    </option>\n  ))\n\n  return (\n    <li>\n      <div className=\"view\">\n        <div className=\"segment label\">\n          <input\n            className=\"toggle\"\n            type=\"checkbox\"\n            checked={completed}\n            onChange={handleCompletedChanged}\n          />\n          <div className=\"todo-text\">{text}</div>\n        </div>\n        <div className=\"segment buttons\">\n          <select\n            className=\"colorPicker\"\n            value={color}\n            style={{ color }}\n            onChange={handleColorChanged}\n          >\n            <option value=\"\"></option>\n            {colorOptions}\n          </select>\n          <button className=\"destroy\" onClick={onDelete}>\n            <TimesSolid />\n          </button>\n        </div>\n      </div>\n    </li>\n  )\n}\n\nexport default TodoListItem\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,cAAc,IAAIC,UAA3B,QAA6C,mBAA7C;AAEA,SAASC,eAAT,EAA0BC,UAA1B,QAA4C,mBAA5C;AACA,SACEC,iBADF,EAEEC,WAFF,EAGEC,WAHF,EAIEC,cAJF,QAKO,cALP,C,CAOA;;;;AACA,MAAMC,YAAY,GAAG,QAAY;EAAA;;EAAA,IAAX;IAAEC;EAAF,CAAW;EAC/B;EACA,MAAMC,IAAI,GAAGZ,WAAW,CAAEa,KAAD,IAAWJ,cAAc,CAACI,KAAD,EAAQF,EAAR,CAA1B,CAAxB;EACA,MAAM;IAAEG,IAAF;IAAQC,SAAR;IAAmBC;EAAnB,IAA6BJ,IAAnC;EAEA,MAAMK,QAAQ,GAAGhB,WAAW,EAA5B;;EAEA,MAAMiB,sBAAsB,GAAG,MAAM;IACnCD,QAAQ,CAACT,WAAW,CAACI,IAAI,CAACD,EAAN,CAAZ,CAAR;EACD,CAFD;;EAIA,MAAMQ,kBAAkB,GAAIC,CAAD,IAAO;IAChC,MAAMJ,KAAK,GAAGI,CAAC,CAACC,MAAF,CAASC,KAAvB;IACAL,QAAQ,CAACX,iBAAiB,CAACM,IAAI,CAACD,EAAN,EAAUK,KAAV,CAAlB,CAAR;EACD,CAHD;;EAKA,MAAMO,QAAQ,GAAG,MAAM;IACrBN,QAAQ,CAACV,WAAW,CAACK,IAAI,CAACD,EAAN,CAAZ,CAAR;EACD,CAFD;;EAIA,MAAMa,YAAY,GAAGpB,eAAe,CAACqB,GAAhB,CAAqBC,CAAD,iBACvC;IAAgB,KAAK,EAAEA,CAAvB;IAAA,UACGrB,UAAU,CAACqB,CAAD;EADb,GAAaA,CAAb;IAAA;IAAA;IAAA;EAAA,QADmB,CAArB;EAMA,oBACE;IAAA,uBACE;MAAK,SAAS,EAAC,MAAf;MAAA,wBACE;QAAK,SAAS,EAAC,eAAf;QAAA,wBACE;UACE,SAAS,EAAC,QADZ;UAEE,IAAI,EAAC,UAFP;UAGE,OAAO,EAAEX,SAHX;UAIE,QAAQ,EAAEG;QAJZ;UAAA;UAAA;UAAA;QAAA,QADF,eAOE;UAAK,SAAS,EAAC,WAAf;UAAA,UAA4BJ;QAA5B;UAAA;UAAA;UAAA;QAAA,QAPF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAUE;QAAK,SAAS,EAAC,iBAAf;QAAA,wBACE;UACE,SAAS,EAAC,aADZ;UAEE,KAAK,EAAEE,KAFT;UAGE,KAAK,EAAE;YAAEA;UAAF,CAHT;UAIE,QAAQ,EAAEG,kBAJZ;UAAA,wBAME;YAAQ,KAAK,EAAC;UAAd;YAAA;YAAA;YAAA;UAAA,QANF,EAOGK,YAPH;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAUE;UAAQ,SAAS,EAAC,SAAlB;UAA4B,OAAO,EAAED,QAArC;UAAA,uBACE,QAAC,UAAD;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QAVF;MAAA;QAAA;QAAA;QAAA;MAAA,QAVF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AA6BD,CAvDD;;GAAMb,Y;UAESV,W,EAGIC,W;;;KALbS,Y;AAyDN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}